<?xml version="1.0" encoding="UTF-8" ?>
<section xml:id="sec_appl_knight">
  <title>Application: The Knight's Tour</title>
  <p>
    Chess is a game played on an
    <m>8 \times 8</m> grid which utilizes a variety of different pieces.
    One piece, the knight,
    is different from the other pieces in that it can jump over other pieces.
    However, the knight is limited in how far it can move in a given turn.
    For these reasons, the knight is a powerful,
    but often under-utilized, piece.
  </p>
  <p>
    A knight can move two units either horizontally or vertically,
    and one unit perpendicular to that.
    Four knight moves are as illustrated in <xref ref="F_knight_1"></xref>,
    and the other four moves are the opposites of these.
  </p>
  <figure xml:id="F_knight_1">
    <caption>Moves a knight can make.</caption>
    <image width="73%" source="knight_moves_1"/>
  </figure>
  <p>
    The knight's tour problem is the mathematical problem of finding a knight's tour,
    that is a sequence of knight moves so the the knight visits each square exactly once.
    While we won't consider a knight's tour in this text,
    we will see using linear combinations of vectors that a knight can move from its initial position to any other position on the board,
    and that it is possible to determine a sequence of moves to make that happen.
  </p>
</section>